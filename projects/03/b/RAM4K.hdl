// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way( in=load, sel=address[0..2], 
              a=RAM0Load, b=RAM1Load, c=RAM2Load, d=RAM3Load,
              e=RAM4Load, f=RAM5Load, g=RAM6Load, h=RAM7Load);
    RAM512(in=in, load=RAM0Load, address=address[3..11], out=RAM0Out);
    RAM512(in=in, load=RAM1Load, address=address[3..11], out=RAM1Out);
    RAM512(in=in, load=RAM2Load, address=address[3..11], out=RAM2Out);
    RAM512(in=in, load=RAM3Load, address=address[3..11], out=RAM3Out);
    RAM512(in=in, load=RAM4Load, address=address[3..11], out=RAM4Out);
    RAM512(in=in, load=RAM5Load, address=address[3..11], out=RAM5Out);
    RAM512(in=in, load=RAM6Load, address=address[3..11], out=RAM6Out);
    RAM512(in=in, load=RAM7Load, address=address[3..11], out=RAM7Out);
    Mux8Way16(a=RAM0Out, b=RAM1Out, c=RAM2Out, d=RAM3Out,
              e=RAM4Out, f=RAM5Out, g=RAM6Out, h=RAM7Out,
              sel=address[0..2], out=out);
}